import os
import srt
import argparse

def arg_parser_init():
    parser = argparse.ArgumentParser(
        prog="Subtitle desync fixer",
        description="Corrects subtitles generated by using the SRT-corrector using the raw_output",
        epilog="sub-desync-fixer"
    )
    parser.add_argument('raw_output')
    parser.add_argument('original_srt')
    parser.add_argument('corrected_output_srt')
    return (parser)

def correct_desync(raw_output, original_srt, output_srt):
    # Open files:
    raw = open(raw_output, "r", encoding="utf-8")
    original = open(original_srt, "r", encoding="utf-8")
    output = open(output_srt, "w+", encoding="utf-8")

    # Read in data:
    osubs = list(srt.parse(original.read()))
    rawlines = raw.readlines()

    # Parse raw content into subs.
    i = 0
    for sub in osubs:
        sub.content = ""
        digit_encountered = False
        while (i < len(rawlines)):
            if (rawlines[i].rstrip() == ""):
                print("Boop!")
                sub.content += "Boop!"
                i += 1
            if (rawlines[i].rstrip().isdigit() == True):
                if (digit_encountered == True):
                    digit_encountered = False
                    break
                else:
                    i += 1
                    digit_encountered = True
            elif (rawlines[i] != ""):
                sub.content += rawlines[i]
                i += 1
                
    corrected_subs = srt.compose(osubs)
    output.write(corrected_subs)

def main():
    parser = arg_parser_init()
    args = parser.parse_args()
    correct_desync(args.raw_output, args.original_srt, args.corrected_output_srt)

main()